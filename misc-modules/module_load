#!/bin/sh

set -e

# Load for Buildroot (modules dir)
buildroot=false

case "$1" in
    -buildroot)
        buildroot=true
        shift  # Remove "-buildroot" from arguments
        ;;
    -*)
        echo "Unknown option: $1"
        exit 1
        ;;
    *)
        # If it's not an option, break out of the loop (start processing arguments)
        break
        ;;
esac

# Check the number of arguments
if [ $# -lt 1 ]; then
    echo "Wrong number of arguments"
    echo "usage: $0 <-buildroot> module_name"
    echo "Will create a corresponding device /dev/module_name associated with module_name.ko"
    exit 1
fi

module=$1
# Use the same name for the device as the name used for the module
device=$1
# Support read/write for owner and group, read only for everyone using 644
mode="664"

# Group: since distributions do it differently, look for wheel or use staff
# These are groups which correspond to system administrator accounts
if grep -q '^staff:' /etc/group; then
    group="staff"
else
    group="wheel"
fi

modules_dir="."

if $buildroot; then
    modules_dir=/lib/modules/$(uname -r)/extra
fi

echo "Load our module, exit on failure"
insmod $modules_dir/$module.ko $* || exit 1
echo "Get the major number (allocated with allocate_chrdev_region) from /proc/devices"
major=$(awk "\$2==\"$module\" {print \$1}" /proc/devices)
if [ ! -z "$major" ]; then
    echo "Remove any existing /dev node for /dev/${device}"
    rm -f /dev/${device}
    echo "Add a node for our device at /dev/${device} using mknod"
    mknod /dev/${device} c $major 0
    echo "Change group owner to ${group}"
    chgrp $group /dev/${device}
    echo "Change access mode to ${mode}"
    chmod $mode /dev/${device}
else
    echo "No device found in /proc/devices for driver ${module} (this driver may not allocate a device)"
fi
